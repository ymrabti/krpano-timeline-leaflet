<krpano>
    <data name="streetview_css_underline">
        a {
                text-align:left;
            color:#FFFFFF;
            font-family:Arial;
            font-weight:normal;
            font-size:16px;
            text-decoration:underline
        }
    </data>
    <data name="streetview_css_normal">
        div {
                text-align:left;
            color:#FFFFFF;
            font-family:Arial;
            font-weight:normal;
            font-size:16px;
            text-decoration: none;
        }
        a {
                text-align:left;
            color:#FFFFFF;
            font-family:Arial;
            font-weight:normal;
            font-size:16px;
            text-decoration: none;
        }
    </data>
    <style name="streetview_arrow" keep="false" edge="bottom" width="60" scale="0.5" distorted="true" capture="false" crop="0|0|84|150" onovercrop="84|0|84|150" ondowncrop="0|0|84|150" inverserotation="true" onhover="showtext(get(linkedpano));" onclick="streetview_gotopano(get(linkedpano));" />

    <style name="streetview_arrow_others2" crop="0|0|84|190" onovercrop="84|0|84|190" ondowncrop="0|0|84|190" />
    <events onkeydown="streetview_checkkey();" onviewchange="streetview_arrowupdate();" onnewpano="
                streetview_updatehotspotsanddirection();
                streetview_view_restore();
                streetview_look_forward();
                set(streetview_newpano_fired, true);
                " onxmlcomplete="
                if(action[TracePanoNotInBatch],
                    TracePanoNotInBatch();
                    action.removearrayitem(TracePanoNotInBatch);
                );
                " />
    <layer name="streetview_websitelink" keep="true" url="%FIRSTXML%/plugins/textfield.swf" align="left" x="75" selectable="false" handcursor="true" background="false" css="data:streetview_css_normal" textshadow="1" onover="set(css,data:streetview_css_underline);" onout="set(css,data:streetview_css_normal);" parent="layer[skin_control_bar]" />

    <layer name="streetview_btn_print" keep="true" url="%FIRSTXML%/plugins/streetview/images/print.png" style="skin_glow" align="left" x="70" scale="0.5" onclick="js(window.print())" parent="layer[skin_control_bar]" visible="false" />

    <layer name="streetview_additionallink" keep="true" url="%FIRSTXML%/plugins/textfield.swf" align="center" edge="left" x="175" selectable="false" handcursor="true" background="false" css="data:streetview_css_normal" textshadow="1" onover="set(css,data:streetview_css_underline);" onout="set(css,data:streetview_css_normal);" parent="layer[skin_control_bar]" />

    <layer name="streetview_logoutlink" keep="true" url="%FIRSTXML%/plugins/textfield.swf" align="center" endge="right" x="-165" selectable="false" handcursor="true" background="false" css="data:streetview_css_normal" textshadow="1" onover="set(css,data:streetview_css_underline);" onout="set(css,data:streetview_css_normal);" parent="layer[skin_control_bar]" visible="false" />
    <layer name="streetview_tm_control" keep="true" type="container" align="right" x="100" width="215" height="40" parent="skin_control_bar" visible="false" zorder="50">

        <layer name="streetview_tm_label" keep="true" url="%FIRSTXML%/plugins/textfield.swf" align="right" x="150" selectable="false" handcursor="false" background="false" css="data:streetview_css_normal" textshadow="1" />

        <layer name="streetview_tm_arrow_left" keep="true" style="skin_base|skin_glow" crop="128|128|64|64" align="right" x="120" scale="0.35" ondown2="js(krpanoPluginsStuff.streetview.setPrevBatch());" />

        <layer name="streetview_tm_arrow_right" keep="true" style="skin_base|skin_glow" crop="128|64|64|64" align="right" x="-5" scale="0.35" ondown2="js(krpanoPluginsStuff.streetview.setNextBatch());" />

    </layer>
    <action name="streetview_startup">
        copy(sv.tiles_dir_struct, plugin[streetview].tiles_dir_struct);
        copy(sv.tilespath, plugin[streetview].tilespath);

        streetview_add_plugin_stuff();

        if(sv_startup_pano !== null,
            copy(sv.startup_pano_from_url, sv_startup_pano);
        );
        if(sv_startup_pano === null AND plugin[railway] === null,
            copy(sv_startup_pano, plugin[streetview].pano);
        );
        if(sv_startup_heading !== null,
            set(sv.dontlookforward, 1);
        );
        if(sv_startup_heading === null, copy(sv_startup_heading, plugin[streetview].pan); );
        if(sv_startup_tilt === null, copy(sv_startup_tilt, plugin[streetview].tilt); );
        if(sv_startup_zoom === null, copy(sv_startup_zoom, plugin[streetview].zoom); );

        copy(view.fov, sv_startup_zoom);
        copy(view.vlookat, sv_startup_tilt);

        copy(sv.startup_heading, sv_startup_heading);
        copy(sv.startup_pano, sv_startup_pano);

        if(sv_batch !== null,
            copy(plugin[streetview].timeline, sv_batch);
        );

        streetview_view_backup();

        trace(Streetview plug-in by Applied-Streetview.com version 20160603);

        delayedcall(0.3,
            if(sv_startup_pano,
                streetview_gotopano(get(sv_startup_pano), get(sv_startup_heading));
            );

            delete(sv_startup_pano, sv_startup_heading, sv_startup_tilt, sv_startup_zoom);
        );

        if(plugin[streetview].hide_menu == true,
            copy(sv.controlbar_offset, skin_settings.controlbar_offset);
            copy(layer[skin_control_bar].y, layer[skin_control_bar].y_closed);
            add(layer[skin_scroll_window].y, layer[skin_control_bar].height, layer[skin_control_bar].y);
            copy(skin_settings.controlbar_offset, layer[skin_control_bar].y_closed);

            delayedcall(1,
                copy(layer[skin_control_bar].y_opened, sv.controlbar_offset);
                add(layer[skin_scroll_window].y_opened, layer[skin_control_bar].height, layer[skin_control_bar].y_opened);
                copy(skin_settings.controlbar_offset, sv.controlbar_offset);
                delete(sv.controlbar_offset);
            );

            set(layer[skin_btn_show].visible,true);
            set(layer[skin_btn_show].alpha, 1);
        );
    </action>
    <action name="streetview_add_plugin_stuff">
        set(layer[skin_title].css, "data:streetview_css_normal");
        set(layer[skin_title].style, null);
        set(layer[skin_title].textshadow, 1);
        set(layer[skin_title].autowidth, true);
        set(layer[skin_title].onover, "set(css,data:streetview_css_underline);");
        set(layer[skin_title].onout, "set(css,data:streetview_css_normal);");

        if(plugin[streetview].show_permalink,
            set(layer[skin_title].visible, true);
            set(layer[skin_title].enabled, true);
        );

        set(layer[skin_loadingtext].keep, false);
        set(layer[skin_btn_prev].visible, false);
        set(layer[skin_btn_next].visible, false);
        set(layer[skin_btn_thumbs].visible, false);


        txtadd(layer[streetview_websitelink].html, "[a href='", get(plugin[streetview].companyurl), "' target='_blank']", get(plugin[streetview].companydesc), "[/a]");

        if(plugin[streetview].show_print == true,
            set(layer[streetview_websitelink].x, 125);
            set(layer[streetview_btn_print].visible, true);
        );

        txtadd(layer[streetview_additionallink].html, "[a href='", get(plugin[streetview].infourl),"' target='_blank']", get(plugin[streetview].infodesc), "[/a]");

        txtadd(layer[streetview_logoutlink].html, "[a id='logout' href='", get(files_path), PHPAuth/logout.php, "']", get(plugin[streetview].logoutlabel), "[/a]");
        if(auth_enabled,
            set(layer[streetview_logoutlink].visible, true);
        );

        if(plugin[streetview].show_timeline,
            txtadd(layer[streetview_tm_label].html, "[div]", get(plugin[streetview].timelinelabel), "[/div]");
            set(layer[streetview_tm_control].visible, true);
        );
    </action>
    <action name="streetview_view_backup">
        set(backup_limitview, get(view.limitview));
        set(backup_vlookatmin, get(view.vlookatmin));
        set(backup_vlookatmax, get(view.vlookatmax));
        set(backup_fovtype, get(view.fovtype));
        set(backup_fovmin, get(view.fovmin));
        set(backup_fovmax, get(view.fovmax));
    </action>
    <action name="streetview_view_restore">
        set(view.limitview, get(backup_limitview));
        set(view.vlookatmin, get(backup_vlookatmin));
        set(view.vlookatmax, get(backup_vlookatmax));
        set(view.fovtype, get(backup_fovtype));
        set(view.fovmin, get(backup_fovmin));
        set(view.fovmax, get(backup_fovmax));
    </action>
    <action name="streetview_look_forward">
        if(plugin[streetview].viewconfig == "forward",
            ifnot(get(sv.dontlookforward),
                set(view.hlookat, 0);
                set(view.vlookat, 0);
                ,
                delete(sv.dontlookforward);
            );
        );
    </action>
    <action name="streetview_gotopano">
        if(%2 === null,
            delete(sv.startpano_heading);
            ,
            set(sv.startpano_heading, %2);
        );
    
        set(sv.temp_pano_url,  https://players.applied-streetview.com/Timeline/plugins/streetview/ajax/kgen.php?sv=%1);

        txtadd(sv.temp_pano_url, get(sv.temp_pano_url), &amp;tiles_dir_struct=, get(sv.tiles_dir_struct));

        if(plugin[railway],
            txtadd(sv.temp_pano_url, get(sv.temp_pano_url), &amp;others2=1);

            if(plugin[railway].options.otherlinkstep,
                txtadd(sv.temp_pano_url, get(sv.temp_pano_url), &amp;other_link_step=, get(plugin[railway].options.otherlinkstep));
            );
        );

        if(plugin[streetview].show_timeline == true,
            txtadd(sv.temp_pano_url, get(sv.temp_pano_url), &amp;batch=, get(plugin[streetview].timeline));
            if(%3 == true,
                txtadd(sv.temp_pano_url, get(sv.temp_pano_url), &amp;new_batch=1, &amp;old_lat=, get(mapspot.lat), &amp;old_lng=, get(mapspot.lng));
            );
        );


        _loadPano(get(sv.temp_pano_url));
    </action>
    <action name="_loadPano">
        jsget(sv.use_callback, "typeof krpanoXhrCallback");
        if (sv.use_callback != 'function',
            loadpano(%1, null, MERGE, blend(0.7));
            ,
            jscall(calc( "krpanoXhrCallback( '%1', function (xmlText) { krpano.call('loadxml(\''+xmlText+'\', null, MERGE, blend(0.7));'); } );" ));
        );
    </action>
    <action name="streetview_checkkey">
        if(keycode == 34 AND hotspot[spot1] !== null, "streetview_gotopano(get(hotspot[spot1].linkedpano));");
        if(keycode == 33 AND hotspot[spot2] !== null, "streetview_gotopano(get(hotspot[spot2].linkedpano));");
    </action>
    <action name="streetview_updatehotspotsanddirection">
        if(sv.startpano_heading !== null,
            copy(sv.heading, sv.startpano_heading);
            sub(view.hlookat, sv.heading, mapspot.heading);
        );

        for(set(sv.hsi,0), sv.hsi LT hotspot.count, inc(sv.hsi),
            if(hotspot[get(sv.hsi)].direction,
                if(hotspot[get(sv.hsi)].imagetype == normal, set(hotspot[get(sv.hsi)].url,%FIRSTXML%/plugins/streetview/images/arrow.png); );
                if(hotspot[get(sv.hsi)].imagetype == sequence, set(hotspot[get(sv.hsi)].url,%FIRSTXML%/plugins/streetview/images/arrow_sequence.png); );
                                              
            );
        );
    </action>
    <action name="streetview_arrowupdate">
        div(sv.temphpos, stagewidth, 2);
        sub(sv.tempvpos, stageheight, 150);
        screentosphere(sv.temphpos, sv.tempvpos, sv.temphpos, sv.vshift);
        
        if(sv.vshift LT view.vlookat,
        sub(sv.deltavshift, view.vlookat, sv.vshift);
        add(sv.deltavshift, sv.deltavshift, 60);
        if(sv.deltavshift GT 90, set(sv.deltavshift,90); );
        sub(sv.vang, sv.deltavshift, view.vlookat);
        copy(sv.vshift, view.vlookat);
        ,
        sub(sv.vang, 60, view.vlookat);
        );
        
        for(set(i,0), i LT hotspot.count, inc(i),
            if(hotspot[get(i)].direction,
                sub(sv.hang, view.hlookat, hotspot[get(i)].direction);
                copy(hotspot[get(i)].ath, view.hlookat);
                copy(hotspot[get(i)].atv, sv.vshift);
                copy(hotspot[get(i)].rx, sv.vang);
                copy(hotspot[get(i)].rz, sv.hang);
            );
        );

        add(sv.heading, view.hlookat, mapspot.heading);

        sub(sv.adjustdir, sv.heading,180);
        div(sv.adjustdir, 360);
        roundval(sv.adjustdir, 0);
        mul(sv.adjustdir, 360);
        sub(sv.heading, sv.adjustdir);

        txtadd(sv.urllink, ?sv_startup_pano=, get(mapspot.pano));


        mul(sv.heading_perm, sv.heading, 10);
        mul(sv.vlookat_perm, view.vlookat, 10);
        Math.round(sv.heading_perm);
        Math.round(sv.vlookat_perm);
        div(sv.heading_perm, 10);
        div(sv.vlookat_perm, 10);


        txtadd(sv.urllink, get(sv.urllink), &amp;sv_startup_heading=, get(sv.heading_perm), &amp;sv_startup_tilt=, get(sv.vlookat_perm), &amp;sv_startup_zoom=, get(view.fov));

        for(
                set(sv.i, 0), sv.i LT plugin.count, inc(sv.i)
        ,
            txtadd(sv.temp_action_name, 'permalink_update_', get(plugin[get(sv.i)].name));
            if(
                    action[get(sv.temp_action_name)] !== null
            ,
                call(get(sv.temp_action_name), 'sv.urllink');
            );
        );

        if(permalink_anchor !== null,
            txtadd(sv.urllink, get(sv.urllink), '#', get(permalink_anchor));
        );

        if(plugin[streetview].show_timeline == true,
            txtadd(sv.urllink, get(sv.urllink), &amp;sv_batch=, get(plugin[streetview].timeline));
        );

        txtadd(layer[skin_title].html,'[a href="',get(sv.urllink),'" target="_blank"]',get(plugin[streetview].permalinklabel),'[/a]');
    </action>
</krpano>